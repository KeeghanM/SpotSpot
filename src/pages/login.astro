---
import MainLayout from '@/layouts/main-layout.astro'
import { Button } from '@/components/ui/button'
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'

// Check if user is already logged in
if (Astro.locals.session) {
  return Astro.redirect('/app')
}
---

<MainLayout title="Login to SpotSpot">
  <div
    class="flex min-h-[calc(100vh-theme(spacing.16))] items-center justify-center py-10"
  >
    <Card className="w-full max-w-md">
      <CardHeader className="space-y-1">
        <CardTitle
          className="text-2xl font-bold tracking-tight"
        >
          Login to SpotSpot
        </CardTitle>
        <CardDescription className="text-foreground">
          Enter your credentials to access your account
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div class="space-y-4">
          <div class="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              type="email"
              placeholder="your.email@example.com"
              required
              autoComplete="email"
            />
          </div>

          <div class="space-y-2">
            <div class="flex items-center justify-between">
              <Label htmlFor="password">Password</Label>
              <a
                href="/forgot-password"
                class="text-primary text-sm hover:underline"
              >
                Forgot password?
              </a>
            </div>
            <Input
              id="password"
              type="password"
              required
              autoComplete="current-password"
            />
          </div>

          <Button
            type="button"
            id="login-button"
            className="w-full"
          >
            Log in
          </Button>
          <div
            id="error-container"
            class="mb-4 hidden"
          >
            <p
              id="error-message"
              class="text-red-500"
            >
            </p>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <div class="w-full text-center text-sm">
          Don't have an account?{' '}
          <a
            href="/register"
            class="text-primary hover:underline"
          >
            Sign up
          </a>
        </div>
      </CardFooter>
    </Card>
  </div>
</MainLayout>

<script>
  import { authClient } from '@/lib/auth/client-astro'

  const loginButton =
    document.getElementById('login-button')
  const emailInput = document.getElementById(
    'email',
  ) as HTMLInputElement
  const passwordInput = document.getElementById(
    'password',
  ) as HTMLInputElement
  const errorContainer = document.getElementById(
    'error-container',
  )
  const errorMessage =
    document.getElementById('error-message')

  loginButton?.addEventListener('click', async () => {
    errorContainer?.classList.add('hidden')

    if (!emailInput.value || !passwordInput.value) {
      showError('Please enter both email and password')
      return
    }

    try {
      if (loginButton) {
        loginButton.setAttribute('disabled', 'true')
        loginButton.textContent = 'Logging in...'
      }

      await authClient.signIn.email({
        email: emailInput.value,
        password: passwordInput.value,
        fetchOptions: {
          onSuccess: () => {
            window.location.href = '/app'
          },
          onError: () => {
            showError('Invalid email or password')
          },
        },
      })
    } catch (_error) {
      showError(
        'An error occurred during login. Please try again.',
      )
    } finally {
      if (loginButton) {
        loginButton.removeAttribute('disabled')
        loginButton.textContent = 'Log in'
      }
    }
  })

  function showError(message: string) {
    if (errorMessage && errorContainer) {
      errorMessage.textContent = message
      errorContainer.classList.remove('hidden')
    }
  }

  passwordInput?.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') {
      loginButton?.click()
    }
  })
</script>
